%% basic_stats.sty
%
% Basic stat blocks for the Adventure Module class
%
% Copyright 2016 Michael C. Davis
%
% LICENSE FOR THE WORK
%
% This work consists of the following files:
%    module.cls
%    basic_stats.sty
%    module.tex
%
% This work may be distributed and/or modified under the conditions of the LaTeX
% Project Public License, either version 1.3 of this license or (at your option)
% any later version. The latest version of this license can be found at:
% http://www.latex-project.org/lppl.txt
% and version 1.3 or later is part of all distributions of LaTeX version
% 2005/12/01 or later.
%
% This work has the LPPL maintenance status `author-maintained'.
% 
% The Author and Maintainer of this work is Michael C. Davis
%
%
% OPEN GAME LICENSE
%
% The monster stats in this file are copyright 2000, Wizards of the Coast, Inc.
% and are distributed with permission under the terms of the Open Game License v 1.0.
% See the file module.cls or the compiled file module.pdf for the full text of the
% license.
%
%
% LICENSE FOR COMPILED WORKS
%
% You may distribute compiled works generated using the work as specified in
% Clause 3 of the LaTeX Project Public License. If you incorporate Open Gaming
% Content into the compiled work, you must also comply with the terms of that
% license.

\RequirePackage{tabularx}



% Redefine which environment will be displayed
\includecomment{ifbasicstats}


% Armour class macro
%
% The default for Basic stats is to use the same descending AC that is used in
% the Basic rulebook. However, three alternative styles are defined: ascending
% AC style, B1 style and Swords & Wizardry style. Thanks to Zenopus archives
% for pointing out that the B1 style is an early form of ascending AC, see:
%
% http://zenopusarchives.blogspot.com/2014/02/ascending-ac-in-holmes-basic.html

\newcounter{acasc@module}                                                       % Counter for AC calculations

\newcommand\ac@module[1]{%
   \@ifundefined{acstyle@module}{\gdef\acstyle@module{desc}}{}%                 % Default AC style is descending
   \ifnum\pdfstrcmp{\acstyle@module}{desc}=\z@                                  % Display descending AC
      #1\ignorespaces
   \else
      \setcounter{acasc@module}{19}\addtocounter{acasc@module}{-#1}%
      \ifnum\pdfstrcmp{\acstyle@module}{asc}=\z@                                % Display ascending AC
         \theacasc@module\ignorespaces
      \else\ifnum\pdfstrcmp{\acstyle@module}{b1}=\z@                            % Display AC using B1 notation
         #1/\theacasc@module\ignorespaces
      \else\ifnum\pdfstrcmp{\acstyle@module}{sw}=\z@                            % Display AC using Swords & Wizardry notation
         #1\,(\theacasc@module)\ignorespaces
      \else
         Unknown AC style \acstyle@module
      \fi\fi\fi
   \fi
}

% Hit Dice : convert short form to long form for stat blocks

\newcommand\hd@module[1]{\IfBeginWith{#1}{\half}{#1 (1-4 hp)}{#1}}

% Saving throws : convert long form to short form for stat blocks

\newcommand\sv@module[1]{\StrLeft{#1}{1}[\first]\StrBehind{#1}{ }[\second]\IfInteger{\second}{}{\StrLeft{\second}{1}[\second]}\first\second}

% Morale macro : convert long form to short form for stat blocks

\newcommand\ml@module[1]{\IfSubStr{#1}{ }{\StrBefore{#1}{ }}{#1}}

% Alignment macro : convert long form to short form for stat blocks

\newcommand\al@module[1]{\StrLeft{#1}{1}}



% Basic stat block key-value pairs

\newcommand{\setstatbasic}[2]{%
   \ifcase\thecurrentstat
      \pgfkeys{/#1/AC/.initial       = \ac@module{#2}}
   \or
      \pgfkeys{/#1/HD/.initial       = {#2}}
      \pgfkeys{/#1/HDlong/.initial   = \hd@module{#2}}
   \or
      \pgfkeys{/#1/MVturn/.initial   = {#2}}
   \or
      \pgfkeys{/#1/MVrd/.initial     = {#2}}
   \or
      \pgfkeys{/#1/Attshort/.initial = {#2}}
   \or
      \pgfkeys{/#1/Attlong/.initial  = {#2}}
   \or
      \pgfkeys{/#1/Dmg/.initial      = {#2}}
   \or
      \pgfkeys{/#1/Dmglong/.initial  = {#2}}
   \or
      \pgfkeys{/#1/SV/.initial       = \sv@module{#2}}
      \pgfkeys{/#1/SVlong/.initial   = {#2}}
   \or
      \pgfkeys{/#1/ML/.initial       = \ml@module{#2}}
      \pgfkeys{/#1/MLlong/.initial   = {#2}}
   \or
      \pgfkeys{/#1/AL/.initial       = \al@module{#2}}
      \pgfkeys{/#1/ALlong/.initial   = {#2}}
   \or
      \pgfkeys{/#1/NoAppear/.initial = {#2}}
   \or
      \pgfkeys{/#1/NoInLair/.initial = {#2}}
   \or
      \pgfkeys{/#1/TT/.initial       = {#2}}
   \fi
}

% Define monsters using \setstatbasic

\def\scan@stats#1|{%
   \ifx#1\relax
      \let\next\relax
   \else
      \setstatbasic{\currentmonster}{#1}\let\next\scan@stats
      \stepcounter{currentstat}
  \fi\next
}



% Display monster stats inline
%
% Usage: \stats[monster name]{monster key}{no. appearing}{hit points}

\newcommand{\stats}[4][default]{%
   \ifnum\pdfstrcmp{#1}{default}=\z@
      \ifnum\pdfstrcmp{#3}{1}=\z@
         \pgfkeys{/#2/SingleName}:               % Use the generic name defined for this monster (single instance)
      \else
         \pgfkeys{/#2/PluralName} (#3):          % Use the generic name defined for this monster (plural + number appearing)
      \fi
   \else
      #1                                         % Override the generic name with the optional argument
   \fi
   AC~\pgfkeys{/#2/AC},
   HD~\pgfkeys{/#2/HD},
   hp~#4,
   MV~\pgfkeys{/#2/MVturn}\thinspacebrk(\pgfkeys{/#2/MVrd}),
   Att~\pgfkeys{/#2/Attlong},
   D~\pgfkeys{/#2/Dmg},
   Save~\pgfkeys{/#2/SV},
   ML~\pgfkeys{/#2/ML},
   AL~\pgfkeys{/#2/AL}%
}

% Display monster stats in a stat block
%
% Usage: \statblock[monster name]{monster key}{no. appearing}{hit points}

\newcommand{\statblock}[4][default]{%
   \begin{statblockfreestyle}
   \stats[#1]{#2}{#3}{#4}
   \end{statblockfreestyle}
}



% Table display format for wandering monsters

\newcounter{wandering@module}


\newenvironment{wanderingmonsters}[1][c]{\begin{center}\begin{tabular}{clccccccccc}
\setcounter{wandering@module}{0}%
\tableheader[#1]{Die Roll & Wandering Monster & No. & AC & HD & MV & Attacks & Damage & Save & ML & AL}}
{\end{tabular}\end{center}}

% Usage: \wanderitem[die roll]{monster key}{no. appearing}
%
% Leave no. appearing blank to use the value from the monster stats

\newcommand{\wanderitem}[3][default]{%
   \ifnum\pdfstrcmp{#1}{default}=\z@
      \stepcounter{wandering@module}\thewandering@module
   \else
      \IfInteger{#1}{\setcounter{wandering@module}{#1}\thewandering@module}{#1}
   \fi &
   \IfStrEq{#3}{}{%
      \if\pgfkeysvalueof{/#2/NoAppear}\string 1\pgfkeys{/#2/SingleName}\else\pgfkeys{/#2/PluralName}\fi & \pgfkeys{/#2/NoAppear} &
   }{%
      \ifnum\pdfstrcmp{#3}{1}=\z@\pgfkeys{/#2/SingleName}\else\pgfkeys{/#2/PluralName}\fi & #3 &
   }
   \pgfkeys{/#2/AC}  & \pgfkeys{/#2/HD} & \pgfkeys{/#2/MVrd} & \pgfkeys{/#2/Attshort} &
   \pgfkeys{/#2/Dmg} & \pgfkeys{/#2/SV} & \pgfkeys{/#2/ML}   & \pgfkeys{/#2/AL}\\
}



% Table display format for monster roster

\newenvironment{monsterroster}[1][c]{\begin{center}\begin{tabular}{clcccccccccc}
\tableheader[#1]{Room & Monster & No. & AC & HD & hp & MV & Attacks & Damage & Save & ML & AL}}
{\end{tabular}\end{center}}

% Usage: \rosteritem{room key}{monster key}{no. appearing}{hit points}
%
% If the room key is provided as a reference, the class will create a hyperlink from the monster
% roster to the room description

\newcommand{\rosteritem}[4]{%
   #1 &
   \ifnum\pdfstrcmp{#3}{1}=\z@
      \pgfkeys{/#2/SingleName} &
   \else
      \pgfkeys{/#2/PluralName} &
   \fi
   #3 & \pgfkeys{/#2/AC}  & \pgfkeys{/#2/HD} & #4               & \pgfkeys{/#2/MVrd} & \pgfkeys{/#2/Attshort} &
        \pgfkeys{/#2/Dmg} & \pgfkeys{/#2/SV} & \pgfkeys{/#2/ML} & \pgfkeys{/#2/AL}\\
}



% New Monster environment


\newenvironment{newmonster}[1]{%
\noindent{\Large\filcenter\bfseries \pgfkeys{/#1/SingleName}\phantomsection\addcontentsline{toc}{section}{\pgfkeysvalueof{/#1/SingleName}}}\\[\topskip]
\begin{tabularx}{\linewidth}{@{}l>{\raggedright\arraybackslash}Xl>{\raggedright\arraybackslash}X@{}}
\ArmourClass: & \pgfkeys{/#1/AC}                          & No. Appearing: & \pgfkeys{/#1/NoAppear} (\pgfkeys{/#1/NoInLair})\\
Hit Dice:     & \pgfkeys{/#1/HDlong}                      & Save As:       & \pgfkeys{/#1/SVlong}\\
Move:         & \pgfkeys{/#1/MVturn} (\pgfkeys{/#1/MVrd}) & Morale:        & \pgfkeys{/#1/MLlong}\\
Attacks:      & \pgfkeys{/#1/Attlong}                     & Treasure Type: & \pgfkeys{/#1/TT}\\
Damage:       & \pgfkeys{/#1/Dmglong}                     & Alignment:     & \pgfkeys{/#1/ALlong}\\
\end{tabularx}\par\vspace{\topskip}\noindent\ignorespaces}{\vspace{\topskip}\par\aftergroup\@afterindentfalse\aftergroup\@afterheading}



%
% Alignment macro
%
% Used for monsters with variable alignment. Redefine this just before the monster stat block to set a specific alignment

\newcommand\Alignment{Any}



%
% Pre-defined monster stats (OGL)
%

\monster{kobold}{Kobold}{7|\half|60'|20'|1|weapon|1d4|1d4 or weapon-1|Normal Man|6 or see below|Chaotic|4--16|6--60|P\,(J)}
\monster{gnoll}{Gnoll}{5|2|90'|30'|1|1 weapon|2--8|2--8|Fighter: 2|8|Chaotic|1--6|3--18|D}
\monster{harpy}{Harpy}{-1|3*|60'/150'|20'/50'|3 + special|2 claws and a weapon + charm|1d4/1d4/1d6|1d4/1d4/1d6|Fighter: 6|12|Chaotic|1|1--4|Z}

